from math import trunc

MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

profit = 0
resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}

def is_resource_sufficient(ingredients):
    """Returns True when order can be made, False if ingredients are insufficient."""
    for item in ingredients:
        if ingredients[item] > resources[item]:
            print(f"Sorry there is not enough {item}.")
            return False
    return True

def process_coins():
    """Returns the total calculated from coins inserted."""
    print("Please insert coins.")
    total = int(input("how many quarters?: ")) * 0.25
    total += int(input("how many dimes?: ")) * 0.1
    total += int(input("how many nickles?: ")) * 0.05
    total += int(input("how many pennies?: ")) * 0.01
    return total


def is_transaction_successful(payment, drink_cost):
    """Return True when the payment is accepted, or False if money is insufficient."""
    if payment >= drink_cost:
        change = payment - drink_cost
        print(f"Here is ${change} in change.")
        global profit
        profit += drink_cost
        return True
    else:
        print("Sorry that's not enough money. Money refunded.")
        return False

def make_coffee(beverage, ingredients):
    """Deduct the required ingredients from the resources."""
    for substance in ingredients:
        resources[substance] -= ingredients[substance]
    print(f"Here is your {beverage} ☕️. Enjoy!")

def machine():
    is_working = True

    while is_working:
        user_selection = input("What would you like? (espresso/latte/cappuccino): ").lower()

        if user_selection == "off":
            is_working = False
            return
        elif user_selection == "report":
            print(f"Water: {resources["water"]}ml\n"
                  f"Milk: {resources["milk"]}ml\n"
                  f"Coffee: {resources["coffee"]}g\n"
                  f"Profit: {profit}")
        else:
            drink = MENU[user_selection]
            if is_resource_sufficient(drink["ingredients"]):
                coins = process_coins()
                if is_transaction_successful(coins, drink["cost"]):
                    make_coffee(user_selection, drink["ingredients"])

machine()